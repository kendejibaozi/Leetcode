class Solution {
    public String decodeString(String s) {

        Deque<Integer> nums = new ArrayDeque<>();
        Deque<StringBuilder> resultStack = new ArrayDeque<>();
        StringBuilder current = new StringBuilder();
        int index = 0;
        while (index < s.length()) {
            char c = s.charAt(index);
            if (Character.isDigit(c)) {
                int num = 0;
                while (Character.isDigit(s.charAt(index))) {
                    num = num * 10 + s.charAt(index) - '0';
                    index++;
                }
                nums.push(num);
            }
            else if (c == '[') {
                resultStack.push(current);
                current = new StringBuilder();
                index++;
            }
            else if (c == ']') {
                StringBuilder temp = resultStack.pop();
                int cnt = nums.pop();
                for (int i = 0; i < cnt; i++) {
                    temp.append(current);
                }
                current = temp;
                index++;
            }
            else {
                current.append(c);
                index++;
            }
        }
        return current.toString();
    }
}

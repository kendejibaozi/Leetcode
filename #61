/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        
        if (head == null || head.next == null || k == 0) return head;
        int cnt = 1;
        ListNode p0 = head;
        while (p0.next != null) {
            p0 = p0.next;
            cnt++;
        }
        k = k % cnt;
        p0.next = head;
        ListNode p1 = head;
        for (int i = 0; i < cnt - k - 1; i++) {
            p1 = p1.next;
        }
        ListNode newhead = p1.next;
        p1.next = null;
        return newhead;
    }
}

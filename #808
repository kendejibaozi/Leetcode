class Solution {
    double[][] memo;
    public double soupServings(int n) {
        if (n >= 5000) return 1.0;
        memo = new double[n + 1][n + 1];
        return dfs(n, n);
    }

    private double dfs(int a, int b) {
        if (a <= 0 && b > 0) return 1;
        if (a <= 0 && b <= 0) return 0.5;
        if (b <= 0) return 0;
        if (memo[a][b] != 0) return memo[a][b];
        return memo[a][b] = 0.25* (dfs(a - 100, b) + dfs(a - 75, b - 25) + dfs(a - 50, b - 50) + dfs(a - 25, b - 75));
    }
}

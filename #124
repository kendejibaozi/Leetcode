/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
 /*
class Solution {
    int m = Integer.MIN_VALUE / 2;
    public int maxPathSum(TreeNode root) {
        
    
        return Math.max(dfs(root), m);

    }

    private int dfs(TreeNode root) {
        if (root == null) return Integer.MIN_VALUE / 3;
        int left = dfs(root.left);
        int right = dfs(root.right);

        m = Math.max(m, Math.max(Math.max(left, right), left + right + root.val));
        return Math.max(root.val, Math.max(root.val + left, root.val + right));
    }
}
*/
class Solution {
    int res = Integer.MIN_VALUE;
    public int maxPathSum(TreeNode root) {
        
        dfs(root);
        return res;
    }

    private int dfs(TreeNode root) {
        if (root == null) return 0;
        int left = Math.max(dfs(root.left), 0);
        int right = Math.max(dfs(root.right), 0);
        res = Math.max(res, left + right + root.val);

        return root.val + Math.max(left, right);

    }
}

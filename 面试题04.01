class Solution {
    List<Integer>[] g;
    int n;
    boolean[] visited;
    
    public boolean findWhetherExistsPath(int n, int[][] graph, int start, int target) {
        this.n = n;
        visited = new boolean[n];
        g = new List[n];
        for (int i = 0; i < n; i++) {
            g[i] = new ArrayList<>();
        }
        for (var x : graph) {
            g[x[0]].add(x[1]);
        }

        Queue<Integer> q = new ArrayDeque<>();
        q.offer(start);
        visited[start] = true;
        while (!q.isEmpty()) {
            int cur = q.poll();
            for (int i : g[cur]) {
                if (visited[i]) continue;
                if ( i == target) return true;
                q.offer(i);
                visited[i] = true;
            }
        }
        return false;

    }
}

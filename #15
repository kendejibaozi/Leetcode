class Solution {
    public List<List<Integer>> threeSum(int[] nums) {

        List<List<Integer>> res = new ArrayList<>();
        int n = nums.length;
        Arrays.sort(nums);
        for (int k = 0; k < n - 2; k++) {
            if (nums[k] > 0) break;
            if (k > 0 && nums[k] == nums[k - 1]) 
                continue;
            if (nums[k] + nums[k + 1] + nums[k + 2] > 0)
                break;
            if (nums[k] + nums[n - 1] + nums[n - 2] < 0)
                continue;
            int left = k + 1, right = n - 1;
            while (left < right) {
                int sum = nums[k] + nums[left] + nums[right];
                if (sum == 0) {
                    res.add(Arrays.asList(nums[k], nums[left], nums[right]));
                    left++;
                    right--;
                    while (left < right && nums[left] == nums[left - 1]) {
                        left++;
                    }
                    while (left < right && nums[right] == nums[right + 1]) {
                        right--;
                    }
                }
                else if (sum < 0) {
                    left++;
                }
                else {
                    right--;
                }
            }
        }
        return res;
    }
}

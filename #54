class Solution {
    int[][] matrix;
    int[][] dirs = {{0, 1}, {1, 0}, {0, -1}, {-1, 0}};
    public List<Integer> spiralOrder(int[][] matrix) {
        int m = matrix.length, n = matrix[0].length;
        List<Integer> res = new ArrayList<>();
        int x = 0, y = 0, k = 0;
        for (int i = 0; i < m * n; i++) {
            res.add(matrix[x][y]);
            matrix[x][y] = Integer.MIN_VALUE;

            int newx = x + dirs[k][0];
            int newy = y + dirs[k][1];
            if (newx < 0 || newx >= m || newy < 0 || newy >= n || matrix[newx][newy] == Integer.MIN_VALUE) {
                k = (k + 1) % 4;
                newx = x + dirs[k][0];
                newy = y + dirs[k][1];
            }
            x = newx;
            y = newy;
        }
        return res;

    }
}
